#!/bin/bash

function usage {
cat << EOF
Daily lab notebook entries.

Usage: `basename $0` [DATE]

    DATE  date to see daily notes for; defaults to current date
EOF
}

printpath=false
viewnote=false
while getopts "hpv" OPTION; do
    case $OPTION in
        h)
            usage
            exit
            ;;
        p)
            printpath=true
            shift $(( OPTIND - 1))
            ;;
        v)
            viewnote=true
            shift $(( OPTIND - 1))
    esac
done

labnotebook=`myscriptconf get labnotebook location`
defaultproject=`myscriptconf get daily defaultproject`
defaultext=`myscriptconf get daily defaultext`
browser=`myscriptconf get daily browser`
browserarg=`myscriptconf get daily browserarg`

mostrecent=`cat $labnotebook/.mostrecent | awk -F '-' '{ print $1 "/" $2 }'`/`cat $labnotebook/.mostrecent`
mostrecent=$labnotebook/dailies/${mostrecent}.${defaultext}

currentdate=`date "+%Y-%m-%d"`
trgdate=$1
istoday=false
if [ -z $trgdate ]; then
    trgdate=$currentdate
    istoday=true
else
    # fill in current year/month if necessary
    nf=`echo $trgdate | awk -F "-" '{ print NF }'`
    if [[ $nf = 1 ]]; then
        trgdate=`date "+%Y-%m"`-${trgdate}
    elif [[ $nf = 2 ]]; then
        trgdate=`date "+%Y"`-${trgdate}
    fi
fi
folder=`echo $trgdate | awk -F "-" '{ print $1 "/" $2 }'`

if [ -z $EDITOR ]; then
    echo "Please set a default editor in the EDITOR environment variable!"
    exit
fi

fullfolder=$labnotebook/dailies/$folder
fpath=$fullfolder/${trgdate}.${defaultext}

## handle printing the path
if [ $printpath = true ]; then
    if [ -e $fpath ]; then
        echo $fpath
    else
        echo "No notes for $trgdate!"
    fi
    exit
fi

## handle viewing the note
if [ $viewnote = true ]; then
    "$browser" "${browserarg}=file://${fpath}"
    exit
fi

## otherwise, first make sure the directory exists
if [ ! -d $fullfolder ]; then
    mkdir -p $fullfolder
fi

## default content if starting new note for today
if [ ! -e $fpath ] && [ $istoday = true ]; then
    echo "Daily notes for $trgdate" >> $fpath
    echo >> $fpath

    echo "### TODOs ###" >> $fpath
    # port over incomplete todos from previous day
    awk -F "###" '{ 
            if (NF > 1) {    # "###" was present, section header
                curproj=$2 
            } else if (match(curproj, /TODOs/)) {   # in the TODOs section
                print $0 
            } 
        }' $mostrecent       `#pull all lines in the TODOs section` \
        | grep '^ *- \[ \]'  `#keep only those with unchecked checkboxes` \
        >> $fpath

    # port over new todos from previous day
    awk -F "###" '{
            if (NF > 1) {
                curproj = $2
            } else if (match($0, /\*\*TODO\*\*/)) {
                sub(/ +$/, "", curproj);  # remove trailing whitespace from current project name
                print curproj ": " $0
            }
        }' $mostrecent                  `#extract all **TODO** lines with their containing project` \
        | sed -e 's/ *Project: *//'     `#remove Project: label` \
        | sed -e 's/ *[-+\*] *\**TODO\**//'  `#remove **TODO** flag` \
        | sed -e 's/^/  - [ ] /'        `#prepend todo checkbox format` \
        >> $fpath
    echo >> $fpath

    # start section for default project
    echo "### Project: $defaultproject ###" >> $fpath
    echo >> $fpath
    echo "  - " >> $fpath

    # update .mostrecent file
    echo $currentdate > $labnotebook/.mostrecent
fi

## if a new note for a different day, don't create a file
if [ ! -e $fpath ] && [ $istoday = false ]; then
    echo "No notes for $trgdate!"
## otherwise, drop into editing
else
    $EDITOR $fpath
fi
