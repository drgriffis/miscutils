#!/bin/bash

function usage {
cat << EOF
Notes for meeting prep.

Usage: `basename $0` WITH [OPTIONS]

    WITH   person/group the meeting was with

Options:
    -h        show this help and exit
    -d DATE   start notes for a meeting on DATE (yyyy-mm-dd format)
    -i INDEX  show notes for prior meeting, INDEX steps back
    -P        show notes for most recent meeting (equivalent to -i 1)
    -l        list all meetings
    -L        list all preset values for WITH
    -p        print path to meeting notes file
EOF
}

function getmeetings {
    ls -R $labnotebook/meetings \
    | grep "_${with}.${defaultext}" \
    | sort -r -n
}
function getmostrecent {
    getmeetings | head -n 1
}
function isdategreater {
    maxdate=$(echo -e "$1\n$2" | sort -r -n | head -n 1)
    if [ "$maxdate" = $1 ]; then
        echo "true"
    else
        echo "false"
    fi
}

listmeetings=false
listwiths=false
printpath=false
trgdate=
index=

# check for options in first argument
getopts "hLl" OPTION
case $OPTION in
    h)
        usage
        exit
        ;;
    l)
        listwiths=true
        ;;
    L)
        listwiths=true
        ;;
esac

# otherwise, first argument will be $with; check for further options
OPTIND=$(( OPTIND + 1 ))
while getopts "hld:i:Pp" OPTION; do
    case $OPTION in
        l)
            listmeetings=true;
            ;;
        d)
            trgdate=$OPTARG
            ;;
        i)
            index=$OPTARG
            ;;
        P)
            index=1
            ;;
        p)
            printpath=true;
            ;;
    esac
done

if [ $listwiths = true ]; then
    myscriptconf get meetings fullwith \
        | sed -e 's/;/|/g' \
        | awk -F '|' '{
              for (i=1; i<NF; i++) {
                  if ((i%2)==1) {
                    print $(i) "\t" $(i+1)
                  }
              }
          }'
    exit
fi

with=$1
if [ -z $with ]; then
    usage
    exit
else
    # correct for "elf"
    if [ "$with" = "elf" ]; then
        echo ">>> Correcting elf --> efl <<<"
        with=efl
    fi
    # get full name of meeting person
    fullwith="`myscriptconf get meetings fullwith \
        | sed -e 's/;/|/g' \
        | awk -F '|' '{
              for (i=1; i<NF; i++) {
                  if (match($(i),/^ *'$with' *$/)) {
                      print $(i+1)
                  }
              }
          }'`"
    # if no full name stored, default to $with
    if [ -z "$fullwith" ]; then
        fullwith=$with
    fi
fi

if [ -z $EDITOR ]; then
    echo "Please set a default editor in the EDITOR environment variable!"
    exit
fi

currentdate=`date "+%Y-%m-%d"`
labnotebook=`myscriptconf get labnotebook location`
defaultext=`myscriptconf get meetings defaultext`

mostrecent=$(getmostrecent | awk -F '_' '{ print $1 }')
upcoming=false
if [[ "$(isdategreater $currentdate $mostrecent)" = "false" ]]; then
    upcoming=true
fi

if [ $listmeetings = true ]; then
    if [ $upcoming = true ]; then
        echo "Upcoming meeting with ${fullwith}":
        echo $mostrecent
        echo
    fi
    echo "Past meetings with ${fullwith}:"
    if [ $upcoming = true ]; then
        meetings=$(getmeetings \
            | tail -n +2 \
            | sed -e "s/_${with}\.${defaultext}//"
        )
    else
        meetings=$(getmeetings \
            | sed -e "s/_${with}\.${defaultext}//"
        )
    fi
    for m in $meetings; do
        i=$(( i + 1 ))
        echo $i - $m
    done
    exit
fi

if [ -z $trgdate ]; then
    trgdate=$currentdate
fi

if [ -z $index ]; then
    if [ $upcoming = true ]; then
        trgdir=$(echo $mostrecent | awk -F '-' '{ print $1 "/" $2 }')
        trgf=$trgdir/${mostrecent}_${with}.${defaultext}
    else
        trgdir=`date "+%Y/%m"`
        trgf=$trgdir/${trgdate}_${with}.${defaultext}
    fi
else
    meetings=$(getmeetings)
    count=0; for m in $meetings; do count=$(( count + 1 )); done
    echo $count $index
    if [[ $count = 0 ]]; then
        echo "No prior meetings with $fullwith!"
        exit
    elif [[ $count -lt $index ]]; then
        echo "You don't have enough of a history with $fullwith to go $index meetings back."
        exit
    fi
    count=0
    for m in $meetings; do
        count=$(( count + 1 ))
        if [[ $count = $index ]]; then
            trgmeeting=$m
        fi
    done
    trgdir=`echo $trgmeeting | awk -F '-' '{ print $1 "/" $2 }'`
    trgf=$trgdir/$trgmeeting
fi
trgf=$labnotebook/meetings/$trgf

## print path if desired
if [ $printpath = true ]; then
    echo $trgf
    exit
fi

## make sure the containing directory exists
if [ ! -d `dirname "$trgf"` ]; then
    mkdir -p `dirname "$trgf"`
fi

## if new meeting, create default content
if [ ! -e "$trgf" ] && [ -z "$index" ]; then
    echo "Meeting notes: $fullwith ($trgdate)" > $trgf
    echo >> $trgf
    echo "### Agenda ###" >> $trgf
    echo "  - " >> $trgf
    echo >> $trgf
    echo >> $trgf
    echo "### Post notes ###" >> $trgf
    echo "  - " >> $trgf
fi

## if looking for non-existent prior meeting, warn
if [ ! -e "$trgf" ] && [ ! -z "$index" ]; then
    echo "No meeting on record with $fullwith on $trgdate!"

## otherwise, drop into editor
else
    $EDITOR $trgf
fi
